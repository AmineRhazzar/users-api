# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- main

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '38a1b355-3cf5-4b58-be4b-2ea98b681098'
  imageRepository: 'users-api'
  containerRegistry: 'mrhazzar.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/Dockerfile'
  tag: '$(Build.BuildId)'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: CI
  displayName: Continuous integration 
  jobs:
    - job: Testing_app
      displayName: Testing your NodeJS app
      pool:
        vmImage: $(vmImageName)
      steps:
        - task: NodeTool@0
          inputs:
            versionSource: 'spec'
            versionSpec: '16.x'

        - script: yarn 
          displayName: Installing dependencies
          
        - script: yarn run test
          displayName: running tests
      
    - job: Building_app
      dependsOn: Testing_app
      condition: succeeded()
      displayName: Building your NodeJS app
      pool:
        vmImage: $(vmImageName)
      steps:
        - task: NodeTool@0
          inputs:
            versionSource: 'spec'
            versionSpec: '16.x'
            
        - script: yarn
          displayName: installing dependencies
          
        - script: yarn run build
          displayName: building the app
          
        - script: rm -rf $(Build.SourcesDirectory)/node_modules
          displayName: deleting node_modules

        - task: PublishBuildArtifacts@1
          inputs:
            PathtoPublish: '$(Build.SourcesDirectory)'
            ArtifactName: 'webapp'
            publishLocation: 'Container'
            StoreAsTar: true



- stage: Building_Docker_Image
  displayName: Building/pushing docker image stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - checkout: none
    - task: DownloadBuildArtifacts@1
      displayName: Downloading build artifact
      inputs:
        buildType: 'current'
        downloadType: 'single'
        artifactName: 'webapp'
        downloadPath: '$(System.DefaultWorkingDirectory)'
        extractTars: true

    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(System.DefaultWorkingDirectory)/webapp/Dockerfile
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
