# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- main

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '38a1b355-3cf5-4b58-be4b-2ea98b681098'
  imageRepository: 'users-api'
  containerRegistry: 'mrhazzar.azurecr.io'
  tag: '$(Build.BuildId)'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: CI
  displayName: Continuous integration 
  jobs:
    - job: Testing_app
      displayName: Testing your NodeJS app
      pool:
        vmImage: $(vmImageName)
      steps:
        - task: NodeTool@0
          inputs:
            versionSource: 'spec'
            versionSpec: '16.x'

        - script: yarn 
          displayName: Installing dependencies
          
        - script: yarn run test
          displayName: running tests
      
    - job: Building_app
      dependsOn: Testing_app
      condition: succeeded()
      displayName: Building your NodeJS app
      pool:
        vmImage: $(vmImageName)
      steps:
        - task: NodeTool@0
          inputs:
            versionSource: 'spec'
            versionSpec: '16.x'
            
        - script: yarn
          displayName: installing dependencies
          
        - script: yarn run build
          displayName: building the app
          
        - script: rm -rf $(Build.SourcesDirectory)/node_modules
          displayName: deleting node_modules

        - task: PublishBuildArtifacts@1
          inputs:
            PathtoPublish: '$(Build.SourcesDirectory)'
            ArtifactName: 'webapp'
            publishLocation: 'Container'
            StoreAsTar: true



- stage: Building_Docker_Image
  displayName: Building/pushing docker image stage
  jobs:
  - job: Build_And_Push_Docker_Image
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - checkout: none
    - task: DownloadBuildArtifacts@1
      displayName: Downloading build artifact
      inputs:
        buildType: 'current'
        downloadType: 'single'
        artifactName: 'webapp'
        downloadPath: '$(System.DefaultWorkingDirectory)'
        extractTars: true

    - task: DownloadSecureFile@1
      name: DownloadSecureFile
      displayName: Adding .env file
      inputs:
        secureFile: .env
        
    - script: mv $(DownloadSecureFile.secureFilePath) $(System.DefaultWorkingDirectory)/extracted_tars/webapp/
      displayName: moving env file into working directory
      
    - script: ls -al $(System.DefaultWorkingDirectory)/extracted_tars/webapp/
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(System.DefaultWorkingDirectory)/extracted_tars/webapp/Dockerfile
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)

  - deployment: Deployment
    environment: production
    dependsOn: Build_And_Push_Docker_Image
    condition: succeeded()
    strategy:
     runOnce:
       deploy:
         steps:
          - task: AzureRmWebAppDeployment@4
            inputs:
              ConnectionType: 'AzureRM'
              azureSubscription: 'Azure subscription 1(6edb3a33-7950-49f2-82f5-3c8375f8ad09)'
              appType: 'webAppContainer'
              WebAppName: 'basic-express'
              deployToSlotOrASE: true
              ResourceGroupName: 'ps'
              SlotName: 'production'
              DockerNamespace: 'mrhazzar.azurecr.io'
              DockerRepository: 'users-api'
              DockerImageTag: '$(tag)'
              StartupCommand: 'yarn start'
